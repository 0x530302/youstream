#!/bin/bash
# 
# Copyright (c) 2012 Dominik Meissner <dome@code-breaker.de>
# 
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the
# disclaimer below) provided that the following conditions are met:
# 
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the
#    distribution.
# 
#  * Neither the name of youstream nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
# 
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE
# GRANTED BY THIS LICENSE.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
# HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# ToDo: better url searching

# Command of your Video Player
COMMAND="mplayer -really-quiet"

# Wait until PERCENTAGE percent of the video is downloaded
PERCENTAGE=5

bashtrap() {
	echo
    echo "CTRL+C Detected!"
	echo "Tidying up..."
	if [[ -n $pid ]]; then
		kill $pid
	fi
	if [[ -n $tmp ]]; then
		rm $tmp
	fi
	exit 1
}
trap bashtrap INT

if [[ -n $1  &&  $1 != "-h"  &&  $1 != "--help" ]]; then
	for i in $(seq 1 $#); do
		echo "Process ${!i}"
		
		# is a youtube link?
		youtube-dl -q -g ${!i} 2> /dev/null 1> /dev/null
		if [[ $? -ne 0 ]]; then
			links=$(curl -s ${!i} | grep 'youtube.com' | grep  'https\?://[^"]' | sed -e 'sn.*"\(https\?://\)n\1ng' -e 's/".*//g')
		else
			links=${!i}
		fi

		for vid in $links; do
			echo "Found Video: $vid"
			youtube-dl -q -F $vid
			if [[ $? -ne 0 ]]; then 
				continue
			fi
			echo -n "Choose format: "
			read format foo

			tmp=$(mktemp)
			size=$(curl -s -I $(youtube-dl -q -g -f $format $vid) | grep -e "Content-Length:" | sed  -e 's/[^0-9]*//g')
			youtube-dl -q --no-part -f $format -o $tmp $vid &
			pid=$!

			replay=1
			while [ $replay -eq 1 ]; do
				if [[ -f $tmp ]]; then
				echo -n "Wait for Video to stream"
					while [ $(( ($(stat -c %s $tmp) * 100) / $size)) -lt $PERCENTAGE ]; do
						echo -n "."
						sleep 1
					done
					echo

					$COMMAND $tmp
					echo -n "Replay video ? [Y/n] "
					read answer foo
					case "$answer" in
						[Nn])
							replay=0 ;;
						*)
							replay=1 ;;
					esac
				else
					sleep 1
				fi
			done
			
			echo -n "Delete video ? [Y/n] "
			read answer foo
			case "$answer" in
				[Nn])
					echo "Video is saved in $tmp" ;;
				*)
					# remove junk
					kill $pid
					rm $tmp
					;;
			esac
		done
	done
	echo
else
	echo "Usage: $0 url [url...]"
	exit 1
fi
