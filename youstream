#!/bin/bash
# 
# Copyright (c) 2012 Dominik Meissner <dome@code-breaker.de>
# 
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the
# disclaimer below) provided that the following conditions are met:
# 
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the
#    distribution.
# 
#  * Neither the name of youstream nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
# 
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE
# GRANTED BY THIS LICENSE.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
# HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# ToDo: examine if the url is already a youtube video
# ToDo: multiple urls as parameter

# Command of your Video Player
COMMAND="mplayer"

# Wait until PERCENTAGE percent of the video is downloaded
PERCENTAGE=5

if [[ -n $1  &&  $1 != "-h"  &&  $1 != "--help" ]]; then
	links=$(curl -s $1 | grep 'youtube.com' | grep  'http://[^"]' | sed -e 's/.*"http:\/\//http:\/\//' -e 's/".*//g')

	for i in $links; do
		echo "Found Video: $i"
		youtube-dl -q -F $i
		echo -n "Choose format: "
		read format

		tmp=$(mktemp)
		size=$(curl -s -I $(youtube-dl -q -g -f $format $i) | grep -e "Content-Length:" | sed -e "s/.*: //g" -e 's/[^0-9]*//g')
		youtube-dl -q --no-part -f $format -o $tmp $i &
		pid=$!

		replay=1
		while [ $replay -eq 1 ]; do
			echo -n "Wait for Video to stream"
			while [ $(( ($(stat -c %s $tmp) * 100) / $size)) -lt $PERCENTAGE ]; do
				echo -n "."
				sleep 1
			done
			echo

			$COMMAND $tmp
			echo -n "Replay video ? [Y/n] "
			read -sn1 answer
			case "$answer" in
				[Nn])
					replay=0 ;;
				*)
					replay=1 ;;
			esac
		done
		
		# remove junk
		kill $pid
		rm $tmp
	done
else
	echo "Usage: $0 url [url...]"
	exit 1
fi
